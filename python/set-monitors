#!/usr/bin/python

import re
from optparse import OptionParser
from subprocess import call, check_output

def xrandr_pairs (xrandr_output):
    return re.findall("\n(\S+).*?\n\s+(\S+)", xrandr_output)

def xrandr_command(x_pairs, relation="--left-of"):
    (display, mode) = x_pairs[0]
    cmd = ["xrandr", "--output", display, "--mode", mode]
    if len(x_pairs) > 1:
        ## no each_cons in python, so I'm faking it with zip
        for ((prev_disp, prev_mode), (disp, mode)) in zip(x_pairs[:-1], x_pairs[1:]):
            cmd += ["--output", disp, "--mode", mode, relation, prev_disp]
    return cmd

parser = OptionParser()
parser.add_option("-m", "--mirror", dest="mirror_screens", default=False, action="store_true",
                  help="If passed, mirrors screens instead of tiling them")
(options, args) = parser.parse_args()

xrandr_output = check_output("xrandr")
x_pairs = xrandr_pairs(xrandr_output)
if options.mirror_screens:
    cmd = xrandr_command(x_pairs, "--same-as")
else:
    cmd = xrandr_command(x_pairs)
call(cmd)
