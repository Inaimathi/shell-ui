#!/usr/bin/python3

import os
import time
from optparse import OptionParser

import requests

headers = {
    "Connection": "keep-alive",
    "Cache-Control": "max-age=0",
    "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
    "Accept-Encoding": "gzip,deflate,sdch",
    "Accept-Language": "en-US,en;q=0.8",
    "Accept-Charset": "ISO-8859-1,utf-8;q=0.7,*;q=0.3",
}


def imageStream(username):
    resp = requests.get(
        f"https://civitai.com/api/v1/images?username={username}&nsfw=X&sort=Newest",
        headers=headers,
    )
    if not resp.status_code == 200:
        return None
    res = resp.json()
    while "nextPage" in res["metadata"]:
        for image in res["items"]:
            yield image
        resp = requests.get(res["metadata"]["nextPage"], headers=headers)
        if not resp.status_code == 200:
            return None
        res = resp.json()


if __name__ == "__main__":
    parser = OptionParser()
    parser.add_option(
        "-d",
        "--delay",
        dest="delay",
        default="1",
        help="Manually specify the number of seconds to pause before downloading each target.",
    )

    (options, args) = parser.parse_args()

    for username in args:
        name = username.strip()

        if not os.path.isdir(name):
            os.mkdir(name)

        print(f"Getting {name}...")
        for image in imageStream(name):
            fname = f"{name}/{image['id']}.jpeg"
            if os.path.exists(fname):
                print(f"   -- already got {fname}...")
                continue
            if options.delay is not None:
                time.sleep(int(options.delay))
            print(f"   {fname}...")
            with open(fname, "wb") as dest:
                dest.write(requests.get(image["url"], headers=headers).content)
